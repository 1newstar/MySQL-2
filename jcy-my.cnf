[mysql]
prompt = [\\u@\\h][\\d]>\\_

[mysqld]
# basic settings #
user = mysql
sql_mode = "STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER"
autocommit = 1
character_set_server=utf8mb4
transaction_isolation = READ-COMMITTED
explicit_defaults_for_timestamp = 1
max_allowed_packet = 16777216
event_scheduler = 1  #5.1版本是开启的，5.7默认关闭，周期任务计划线程。

# connection #
interactive_timeout = 1800
wait_timeout = 1800
lock_wait_timeout = 1800   ##元数据锁等待超时时间
skip_name_resolve = 1      ##只允许IP授权，跳过域名
max_connections = 512       
max_connect_errors = 1000000  ##连接请求被阻塞，flush hosts解决，默认值100

# table cache performance settings
table_open_cache = 4096    ##show status like "open_tables"; 值大，调大。
table_definition_cache = 4096  #
table_open_cache_instances = 128 #涉及到锁

# session memory settings #
read_buffer_size = 16M
read_rnd_buffer_size = 32M
sort_buffer_size = 32M
tmp_table_size = 64M
join_buffer_size = 128M
thread_cache_size = 64  #有大量新连接，可以调大此值来提高性能。

# log settings #
log_error = error.log
slow_query_log = 1
slow_query_log_file = slow.log
log_queries_not_using_indexes = 1
log_slow_admin_statements = 1  #管理命令执行慢的也放到慢日志里
log_slow_slave_statements = 1  #从库上执行的慢查询也放到慢日志
log_throttle_queries_not_using_indexes = 10 #1分钟不走索引的只记录10条
expire_logs_days = 90
long_query_time = 2 #可以设置成0.5[mysql]
prompt = [\\u@\\h][\\d]>\\_

[mysqld]
#### basic settings ####
user = mysql
server-id = 10
port = 3306
pid-file = /data/mysql57/logs/lyf.pid
socket = /data/mysql57/logs/mysqld.sock
basedir = /usr/local/mysql57
datadir = /data/mysql57/data
# sql_mode = "STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER"
# 设置 autocommit=0，则用户将一直处于某个事务中，直到执行一条 commit 提交或 rollback 语句才会结束当前事务重新开始一个新的事务。
# set autocommit=0 的好处是在频繁开启事务的场景下，减少一次 begin 的交互。
# autocommit = 1
character_set_server=utf8mb4  # utf8mb4编码是utf8编码的超集，兼容utf8，并且能存储4字节的表情字符
# transaction_isolation = READ-COMMITTED
explicit_defaults_for_timestamp = 1
max_allowed_packet = 16777216 #该值设置过小将导致单个记录超过限制后写入数据库失败，且后续记录写入也将失败
event_scheduler = 1  # 5.1版本是开启的，5.7默认关闭，周期任务计划线程。

#### connection ####
interactive_timeout = 1800  # mysql 在关闭一个 交互 的连接之前所要等待的秒数
wait_timeout = 1800  # mysql 在关闭一个 非交互 的连接之前所要等待的秒数
lock_wait_timeout = 1800   ## 元数据锁等待超时时间
skip_name_resolve = 1      # 只允许IP授权，跳过域名
max_connections = 512
# 对于同一主机，如果有超出该参数值个数的中断错误连接，则该主机将被禁止连接。如需对该主机进行解禁，执行：FLUSH HOST。       
max_connect_errors = 1000000  # 连接请求被阻塞，flush hosts解决，默认值100

# table cache performance settings
table_open_cache = 4096    ##show status like "open_tables"; 值大，调大。
table_definition_cache = 4096  #
table_open_cache_instances = 128 #涉及到锁

#### session memory settings ####
read_buffer_size = 16M  # MySQL 读入缓冲区的大小
read_rnd_buffer_size = 32M  # MySQL 的随机读缓冲区大小
sort_buffer_size = 32M  # MySQL 的顺序读缓冲区大小
tmp_table_size = 64M
# tmpdir = /tmp
# MySQL 在完成某些 join（连接）需求的时候，为了减少参与 join 的“被驱动表”的读取次数以提高性能，
# 需要使用到 join buffer 来协助完成 join 操作,当 join buffer 太小，MySQL 不会将该 buffer 存入磁盘文件,
# 而是先将 join buffer 中的结果与需求 join 的表进行操作，然后清空 join buffer 中的数据，继续将剩余的结果集写入到 buffer 中
join_buffer_size = 128M
thread_cache_size = 64  #有大量新连接，可以调大此值来提高性能。

#### log settings ####
log_error = /data/mysql57/logs/error.log

slow_query_log = 1  # 开启慢查询日志
slow_query_log_file = /data/mysql57/logs/slow.log
log_queries_not_using_indexes = 1 # 记录没有使用索引的查询。
log_slow_admin_statements = 1  # 管理命令执行慢的也放到慢日志里
log_slow_slave_statements = 1  # 从库上执行的慢查询也放到慢日志
log_throttle_queries_not_using_indexes = 10 # 每分钟不走索引的只记录10条
expire_logs_days = 90
long_query_time = 2 #可以设置成0.5
min_examined_row_limit = 100 # 低于100行的慢日志不记录

log-bin = /data/mysql57/logs/binlogs/binlog
binlog_cache_size = 4M
max_binlog_cache_size = 128M
max_binlog_szie = 512M
binlog-rows-query-log-events = 1 # binlog记录执行语句
log-bin-trust-function-creators = 1 # 设置为0，数据更安全，uuid函数能执行，不会报错，但是binlog是row格式，设置为1避免报错信息。
# expire-logs-days = 90
log-slave-updates = 1

#### innodb settings ####
# 这个参数在一开始初始化时就要加入 my.cnf 里，如果已经创建了表，再修改，启动 MySQL 会报错。SSD 最好为 4k 或 8K
innodb_page_size = 16384
# innodb_buffer_pool_size = 160G  # 数据缓冲区 buffer pool 大小，建议使用物理内存的 75%
innodb_buffer_pool_size = 2G
# innodb_buffer_pool_instances = 16 # 提高并发，减少不同线程对内存的争用。当 buffer_pool 的值较大的时候为 1，较小的设置为 8
innodb_buffer_pool_instances = 8
# 运行时 load 缓冲池，快速预热缓冲池，将 buffer pool 的内容（文件页的索引）dump 到文件中，
# 然后快速 load 到 buffer pool 中。避免了数据库的预热过程，提高了应用访问的性能
innodb_buffer_pool_load_at_startup = 1 # 开启加载热数据，5.7.7 以后默认开启
innodb_buffer_pool_dump_at_shutdown = 1 # 关闭数据库时备份热数据
innodb_lru_scan_depth = 4096
innodb_lock_wait_timeout = 5  # 锁超时，事务等待获取资源等待的最长时间，超过这个时间还未分配到资源则会返回应用失败，默认 50s
innodb_io_capacity = 10000    # 根据情况设置，SSD 4000+
innodb_io_capacity_max = 20000
innodb_flush_method = O_DIRECT  # 这个参数控制着innodb数据文件及redo log的打开、刷写模式,O_DIRECT-不经过系统缓存直接存入磁盘
# innodb_file_format = Barracuda  #innodb文件格式，默认也是Barracuda,后期这个参数将被舍弃
# innodb_file_format_max = Barracuda
innodb_undo_logs = 128  # 回滚段，
innodb_rollback_segments的别名。默认128

innodb_undo_tablespaces = 3  # 减小 undo 表空间的大小
innodb_flush_neighbors = 1  # ssd 防止性能抖动，机械盘设置为 1
# innodb_log_group_home_dir = /data/mysql57/logs/redologs # 日志组所在的路径，默认为 data 的 home 目录；
# innodb_undo_directory = /data/mysql57/logs/undologs
# innodb_log_file_size = 17179869184  # 16G 
innodb_log_file_size = 536870912
innodb_log_files_in_group = 2
innodb_log_buffer_size = 16777216  #16M
innodb_purge_threads = 4  # 控制是否使用独立 purge 线程
innodb_large_prefix = 1   # 改为 ON 时，允许单列索引最大达到 3072。否则最大为 767
# innodb_thread_concurrency = 64  # 根据 cpu 设置最优性能
innodb_thread_concurrency = 12
innodb_print_all_deadlocks = 1 # 打印死锁信息,开启后会将所有的死锁记录到 error_log 中
innodb_strict_mode = 1 # 严格模式，类似 sql_mode
# innodb_sort_buffer_size = 67108864
innodb_sort_buffer_size = 16M
innodb_write_io_threads = 16
innodb_read_io_threads = 16 
innodb_file_per_table = 1
innodb_stats_persistent_sample_pages = 64
innodb_autoinc_lock_mode = 2
innodb_online_alter_log_max_size=1G  #online DDL
innodb_open_files=4096

#### replication settings ####
# 将 master.info 和 relay.info 保存在表中
master_info_repository = TABLE
relay_log_info_repository = TABLE
sync_binlog = 1 # 当每进行 n 次事务提交之后，MySQL 将进行一次 fsync 之类的磁盘同步指令来将 binlog_cache 中的数据强制写入磁盘。
gtid_mode = on
enforce_gtid_consistency = 1  # 开启 gtid，必须主从全开
log_slave_updates = 1 # 从服务器的更新是否写入二进制日志
binlog_format = ROW
binlog_rows_query_log_events = 1
# relay-log 日志记录的是从服务器 I/O 线程将主服务器的二进制日志读取过来记录到从服务器本地文件，
# 然后 SQL 线程会读取 relay-log 日志的内容并应用到从服务器
relay_log = /data/mysql57/logs/binlogs/relaylogs/relay.log 
relay_log_recovery = 1  
slave_skip_errors = ddl_exist_errors
slave-rows-search-algorithms = ‘INDEX_SCAN,HASH_SCAN‘

#### semi sync replication settings ####
plugin_load = "validate_password.so;rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
# rpl_semi_sync_master_enabled = 1
loose_rpl_semi_sync_master_enabled = 1
# rpl_semi_sync_master_timeout = 3000
loose_rpl_semi_sync_master_timeout = 3000
# rpl_semi_sync_slave_enabled = 1
loose_rpl_semi_sync_slave_enabled =1

# password plugin #
validate_password_policy=STRONG
validate-password=FORCE_PLUS_PERMANENT

[mysqld-5.6]
# metalock performance settings
metadata_locks_hash_instances=64

[mysqld-5.7]
# new innodb settings #
loose_innodb_numa_interleave=1
innodb_buffer_pool_dump_pct = 40  # 默认 25，表示转储每个 bp instance LRU 上最热的 page 的百分比。通过设置该参数可以减少转储的 page 数。
# innodb_page_cleaners = 16 # 刷脏的进程 N-1
innodb_page_cleaners = 4
innodb_undo_log_truncate = 1
# innodb_max_undo_log_size = 2G
innodb_max_undo_log_size = 512M
innodb_purge_rseg_truncate_frequency = 128  # 控制回收(收缩) undo log 的频率.undo log 空间在它的回滚段没有得到释放之前不会收缩，
# new replication settings #
slave-parallel-type = LOGICAL_CLOCK
slave-parallel-workers = 16
slave_preserve_commit_order=1
slave_transaction_retries=128
# other change settings #
binlog_gtid_simple_recovery=1
log_timestamps=system
show_compatibility_56=on
min_examined_row_limit = 100 ##低于100行的慢日志不记录
binlog-rows-query-log-events = 1 ##binlog记录执行语句
log-bin-trust-function-creators = 1 ##设置为0，数据更安全，uuid函数能执行，不会报错，但是binlog是row格式，设置为1避免报错信息。
expire-logs-days = 90
log-slave-updates = 1

# innodb settings #
innodb_page_size = 16384
innodb_buffer_pool_size = 160G
innodb_buffer_pool_instances = 16 #提高并发，减少不同线程对内存的争用。
innodb_buffer_pool_load_at_startup = 1 #开启加载热数据，5.7.7以后默认开启
innodb_buffer_pool_dump_at_shutdown = 1 #关闭数据库备份热数据
innodb_lru_scan_depth = 4096
innodb_lock_wait_timeout = 5  #锁超时
innodb_io_capacity = 10000    #根据情况设置，SSD 4000+
innodb_io_capacity_max = 20000
innodb_flush_method = O_DIRECT
innodb_file_format = Barracuda  #innodb文件格式，默认也是Barracuda,后期这个参数将被舍弃
innodb_file_format_max = Barracuda
innodb_undo_logs = 128  #回滚段，innodb_rollback_segments的别名。默认128
innodb_undo_tablespaces = 3  #减小undo表空间的大小
innodb_flush_neighbors = 0   #ssd防止性能抖动，机械盘设置为1
innodb_log_file_size = 17179869184  #16G
innodb_log_files_in_group = 2
innodb_log_buffer_size = 16777216  #16M
innodb_purge_threads = 4
innodb_large_prefix = 1  
innodb_thread_concurrency = 64  #根据cpu设置最优性能
innodb_print_all_deadlocks = 1 #打印死锁信息
innodb_strict_mode = 1 #严格模式，类似sql_mode
innodb_sort_buffer_size = 67108864
innodb_write_io_threads = 16
innodb_read_io_threads = 16 
innodb_file_per_table = 1
innodb_stats_persistent_sample_pages = 64
innodb_autoinc_lock_mode = 2
innodb_online_alter_log_max_size=1G  #online DDL
innodb_open_files=4096

# replication settings #
master_info_repository = TABLE
relay_log_info_repository = TABLE
sync_binlog = 1
gtid_mode = on
enforce_gtid_consistency = 1
log_slave_updates
binlog_format = ROW
binlog_rows_query_log_events = 1
relay_log = relay.log
relay_log_recovery = 1
slave_skip_errors = ddl_exist_errors
slave-rows-search-algorithms = ‘INDEX_SCAN,HASH_SCAN‘

# semi sync replication settings #
plugin_load = "validate_password.so;rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled = 1
rpl_semi_sync_master_timeout = 3000
rpl_semi_sync_slave_enabled = 1

# password plugin #
validate_password_policy=STRONG
validate-password=FORCE_PLUS_PERMANENT

[mysqld-5.6]
# metalock performance settings
metadata_locks_hash_instances=64

[mysqld-5.7]
# new innodb settings #
loose_innodb_numa_interleave=1
innodb_buffer_pool_dump_pct = 40
innodb_page_cleaners = 16
innodb_undo_log_truncate = 1
innodb_max_undo_log_size = 2G
innodb_purge_rseg_truncate_frequency = 128
# new replication settings #
slave-parallel-type = LOGICAL_CLOCK
slave-parallel-workers = 16
slave_preserve_commit_order=1
slave_transaction_retries=128
# other change settings #
binlog_gtid_simple_recovery=1
log_timestamps=system
show_compatibility_56=on
